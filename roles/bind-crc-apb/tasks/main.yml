---
- name: Retrieve {{ _apb_provision_creds.SERVICE_NAME }}  configuration
  shell: >
    oc get configmaps/{{ _apb_provision_creds.SERVICE_NAME | lower }}-{{ crc_svc_config_name }}
    -n {{ namespace }}
    -o jsonpath='{.data.config}'
  register: svc_json_str_config

- name: Validate CRC JSON config
  set_fact: svc_json_config={{ svc_json_str_config.stdout | from_json }}
  register: crc_json_config_valid
  ignore_errors: True

- asb_last_operation:
    description: "config was not valid json. Could not bind"
  when: crc_json_config_valid.failed

- lineinfile:
    line: 'config was not valid json. Could not bind'
    path: '{{ crc_term_msg_filepath }}'
    unsafe_writes: true
  when: crc_json_config_valid.failed

- fail:
    msg: "config was not valid json. Could not bind"
  when: crc_json_config_valid.failed

- name: Creating CRC {{ CLIENT_ID }} configmap
  k8s_v1_config_map:
    name: '{{ _apb_provision_creds.SERVICE_NAME | lower }}-{{ CLIENT_ID | lower }}'
    namespace: '{{ namespace }}'
    annotations:
      configType: '{{ crc_svc_config_type }}'
    labels:
      name: '{{ _apb_provision_creds.SERVICE_NAME }}'
      mobile: '{{ crc_svc_label_mobile }}'
      serviceName: '{{ crc_svc_name }}'
      serviceInstanceID: '{{ _apb_service_instance_id }}'
      mobileClientId: '{{ CLIENT_ID }}'
    data:
      type: '{{ crc_svc_type }}'
      name: '{{ _apb_provision_creds.SERVICE_NAME }}'
      uri: '{{ _apb_provision_creds.SERVICE_URI }}'
      config: '{{ svc_json_config | to_nice_json }}'

- asb_encode_binding:
    fields:
      CLIENT_ID: "{{ CLIENT_ID }}"